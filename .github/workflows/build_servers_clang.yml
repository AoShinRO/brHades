name: "Compilação em Clang"
# build_servers_clang.yml

concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/**'
      - 'tools/ci/**'
      - 'src/**'
      - '3rdparty/**'

jobs:
  build:
    if: "!contains(github.event.head_commit.message, 'ci-skip')"
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-20.04]
        clang: ['6.0', '7', '8', '9', '10', '11','12','13']

    steps:
      - uses: actions/checkout@v4

      - name: Update & Install dependencies
        run: |
          sudo apt update
          sudo apt install build-essential zlib1g-dev libpcre3-dev

      - name: Set up Clang
        uses: egor-tensin/setup-clang@v1
        with:
          version: ${{ matrix.clang }}
          platform: x64

      - name: Verify Clang installation
        run: clang++ --version

      - name: Ensure configure has execution permissions
        run: chmod +x ./configure 

      - name: Check endianess
        run: lscpu | grep "Byte Order"

      - name: Command - configure
        env:
          CONFIGURE_FLAGS: CC=clang-10 CXX=clang++-10 --enable-buildbot=yes
          CXXFLAGS: -std=c++20
        run: ./configure $CONFIGURE_FLAGS

        #env:
        #  CONFIGURE_FLAGS: 'CC=clang-${{ matrix.clang }} CXX=clang++-${{ matrix.clang }} --enable-buildbot=yes'


      - name: Show config.log for debugging
        run: cat config.log || true

      - name: Command - make clean
        run: make clean

      - name: Command - make all
        run: make all
