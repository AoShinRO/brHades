name: Analisador de codigo CodeQL
# analysis_codeql.yml

concurrency:
  group: ${{ github.repository }}-${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/master' }}

on:
  workflow_dispatch:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]
    paths:
      - '.github/workflows/**'
      - 'tools/ci/**'
      - 'src/**'
      - '3rdparty/**'

jobs:
  analyze:
    name: Analise [${{ matrix.mode }}]
    runs-on: ${{ (matrix.language == 'swift' && 'macos-latest') || 'ubuntu-latest' }}
    permissions:
      security-events: write
      packages: read
      actions: read
      contents: read

    strategy:
      fail-fast: false
      matrix:
        gcc: ['10']
        mode: ['PRE', 'RE']

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: c-cpp
        queries: +security-and-quality

    - name: Variable Parsing - PRE
      if: ${{ matrix.mode == 'PRE' }}
      run: |
        echo "PRERE=yes" >> $GITHUB_ENV
    - name: Variable Parsing - RE
      if: ${{ matrix.mode == 'RE' }}
      run: |
        echo "PRERE=no" >> $GITHUB_ENV

    - name: Update & Install dependencies
      run: |
        sudo apt update
        sudo apt install zlib1g-dev libpcre3-dev gcc-${{ matrix.gcc }} g++-${{ matrix.gcc }}

    - name: Check endianess
      run: lscpu | grep "Byte Order"

    - name: Ensure configure has execution permissions
      run: chmod +x ./configure

    - name: Command - configure
      env:
          CONFIGURE_FLAGS: "CC=gcc-${{ matrix.gcc }} CXX=g++-${{ matrix.gcc }} --enable-buildbot=yes"
      run: ./configure $CONFIGURE_FLAGS CXXFLAGS="-std=c++20"

    - name: Show config.log for debugging
      run: cat config.log || true
      
    - name: Command - make clean
      run: make clean

    - name: Command - make all
      run: make all

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3

